user  nginx;

#This should reflect the amount of cores out container can use
worker_processes  1;

daemon off;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  10240;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # default log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # default access log
    access_log  /var/log/nginx/access.log  main;

    # don't rely on the kernel's sendfile() this is more efficient.
    sendfile        on;

    # timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    # beffer sizes
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    # deliver content faster with gzip.
    gzip                on;
    gzip_vary           on;
    gzip_proxied        any;
    gzip_min_length     20;     # minimum “Content-Length” of a response that will be gzipped.
    gzip_comp_level     3;      # Compression Level
    gzip_http_version   1.1;  # minimum HTTP version of a request required to compress a response.
    gzip_types      text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # cache the open file descriptors
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid    2m;
    open_file_cache_min_uses 2;
    open_file_cache_errors   on;

    # Hide nginx information
    server_tokens off;

    include /etc/nginx/conf.d/*.conf;
}
